
public class StringTest1 {

	public static void main(String[] args) {
		
		//클래스로 만드는 모든 객체(변수)는 주소를 기억하는 참조형 변수이다.
		//문자열이 최초로 만들어지면 메모리 어딘가에 문자열이 생성되고 문자열이 생성된 주소값이 면수에 저장된다.
		// 문자열(String) 방식인 str1,2(변수명) 을 선언하고 내용은 ""에써넣는다
		String str1 = "AAA";   // str1 에는 "AAA" 가 생성된 메모리의 주소가 저장된다.
		// 메모리에 같은 내용의 문자열이 있으면 다시만들지 않고 기존에 있는 문자열의 주소값이 변수에 저장된다.
		String str2 = "AAA";  // str2 에는 str1에 저장된 "AAA" 가 생성된 메모리의 주소가 저장된다.
		//즉 str1과,str2 는 같은 주소를 갖게된다
		
		// 관계 연산자 : 연산 결과는 true(참) false(거짓) 둘중 하나이다.
		// >(크다,초과) , >=(크거나 같다, 이상) , <(작다, 미만) , <=(작거나 같다, 이하) , ==(같다) , !=(같지않다)
		// ==를 사용해서 같은가 비교할수 있는 데이터는 기본 자료형(String은 Class이다,기본자료형 아님) 과 NULL(아무것도 없는 상태) 만 가능하다.
		
		//논리연산자
		// && : 논리곱 AND,  두조건이 참일경우에만 참  ~이고, ~이면서, ~중에
		// ||  : 논리합 OR , 두조건중 한개이상 참일경우 참 ~또는, ~이거나
		// !   : 논리부정 , NOT
		
		// if(조건식) {
		//      조건식이 참일경우 실행할 문장;
		//      ...;
		// }else {
		//      조건식이 거짓일 경우 실행할 문장;
		//      ...;
		// }
		
		
		// == 을 사용하여 비교했으므로 변수에 저장된 문자열 자체를 비교한게 아니고 변수에 저장된 주소를 비교하게 된다.
		if(str1 == str2) {
			System.out.println("같다");
		} else {
			System.out.println("다르다");
		}
		
		// 아래의경우 str1,2 처럼 하는것이아닌 3번처럼 선언하는것이 정석이다.
		String str3 = new String("AAA");
		// new라는 예약어를 사용해서 객체를 생성하면 메모리에 같은 내용이 있나 상관없이 무조건 새로운 주소에 생성시킨다.
		
		
		// 문자열을 비교하는 경우 반드시 equals() 메소드를 사용해야한다!!!
		if(str1 .equals (str3)) {
			System.out.println("같다");
		} else {
			System.out.println("다르다");
		}
		
	}
	
}
