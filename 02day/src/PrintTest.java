
public class PrintTest {
	
	public static void main(String[] args) {
		//주석 print: 는 줄바꿈이 없다. println: 은 출력후 줄바꿈이 자동
		// 다른 프로그램과 동일하게 \n 은 줄바꿈을 의미한다
		// 이동 은 Alt 키입력후 방향키로 위아래 사용시 선택한줄의 명령줄이 위아래로 이동한다
		// 복사 의경우 Ctrl+Alt 입력후 아래입력으로 기본은 선택한줄만해당하지만 블록을 잡은상태로 할시 여러불한번에 복사가능
		//지우기 Ctrl+D 를이용하여 가능 또는 Ctrl+Z 으로 되돌리기 가능
		System.out.print("안녕\n자바");
		System.out.println();  // 또다른 줄바꾸기 방법 (출력없이 줄바꾸기 ,한줄바꾸기)
		System.out.println("안녕 자바");
		
		//연산 자 + 연산자의 양쪽에 숫자가나올경우 덧셈을하고 한쪽이라도 문자일경우 이어붙이기가된다.
		System.out.println("5 + 3 = " + 5 + 3);
		//예시 1 | 위 출력값은 5+3=53 으로 출력된다
		System.out.print("5 + 3 = ");
		
		System.out.println(5+3);
		//또는
		System.out.println("5 + 3 = " + (5 + 3));
		//으로 출력가능
		
		System.out.println("5 - 3 = " + (5 - 3));
		//뺄셈의 경우는 예시 1번 처럼할경우 오류가된다.
		
		System.out.println("5 * 3 = " + 5 * 3);
		//곱셈일 경우는 정상출력이된다. (덧셈보다 곱셈의 우선순위가 높기때문)
		
		System.out.println("5 / 3 = " + 5 / 3); //정수와 정수의 결과는 정수이다. 묵시적 형변형
		System.out.println("5 % 3 = " + 5 % 3); //나머지를 구하는식 %
		
		// 묵시적형변환 : 자료형의 크기가 서로다른 자료의 연산 결과는 큰 자료형으로 자동 변환된다. 
		
		// 자바의 기본 자료형
		//boolean : 1바이트(8비트) , true 또는 false를 기억한다
		//char : 2바이트, 1문자를 기억한다.
		
		//short : 2바이트, -32768 ~ 32767 사이의 정수를 기억한
		//int : 4바이트, -2147483648 ~ 214748367 사이의 정수를 기억한다.
		//long : 8바이트, -2의 63승 ~ 2의 63승 - 1 사이의 정수를 기억한다.
		//float : 4바이트, 단정도 실수, 소수점아래로 6자리 정도를 표현한다.
		//double : 8바이트, 배정도 실수, 소수점 아래로 16자리 정도를 표현한다. float 보다 더 정밀한 연산이 가능하다.
		
		System.out.println("5 / 3. = " + 5 / 3.);
		//3을 실수로 변환하여 double 방식으로 변환 법칙에따라 더높은 방식인 8바이트방식짜리 double로 전체 변환
		System.out.println("5. / 3 = " + 5. / 3);
		System.out.println("A + 32 = " + ('A' + 32));
		//작은 따옴표 (') 의경우 문자열이아닌 문자 데이터 이다
		System.out.println("a - 32 = " + ('a' - 32));
		
		//명시적 형변환 : 프로그래머가 그 순간의 자료형을 변경할 수 있다. casting, 형변환
		System.out.println("5 / (double)3 = " + 5 / (double)3);
		System.out.println("A + 32 = " +  (char)('A' + 32));
		System.out.println("a - 32 = " +  (char)('a' - 32));
		
		// 서식있는 출력 (printf() ==> c언어의 printf 사용법과 같다.)
		//printf("출력서식" , 출력할 내용);
		//출력 서식은 출력 서식문자를 재외한 나머지 문자는 입력한 그대로 출력된다.
		//출력 서식 문자 : d(정수), f(실수), c(문자데이터), s(문자열)
		//출력서식의 형식 : %[-][0][n][.m] 서식문자
		// - : 출력할 전체 자리수가 지정된 경우 왼쪽에 맞춰 출력한다.
		// 0 : 출력할ㄹ 전체 자리수가 지전된 경우 왼쪽의 남는자리에 0을 채워 출력한다.
		// n : 출력할 전체 자료수 
		// .m : 소수점 아래 자리수, 잘리는 자리에서 반올린 시켜 출력한다.
		
		System.out.printf("5 + 3 = %d\n", 5 + 3);
		System.out.printf("%d + %d = %d\n", 5, 3, 5 + 3);
		
		// 아래의경우 출력값이 실수이기 때문에 f 로바꿔출력시킨다
		System.out.printf("5 + 3. = %f\n", 5 / 3.);
	}

}
